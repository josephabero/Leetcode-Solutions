Combination Sum
https://leetcode.com/problems/combination-sum/

Brute Force:
	Iterate through every permutation, check if they exist within the set as you find a valid sum.

	Time: O(n^3)
	Space: O(n)

Optimal:
	Use backtracking to create a decision tree that excludes evaluation of duplicate sums.

	At each decision, evaluate both combinations where we choose to add value, then also evalute when value is ignored.

	Example: values = [2, 3, 6, 7], target = 7

	Decision Tree:
									[]
					[2]								[]
			[2, 2]				[2]				[3]		[]
	[2, 2, 2]	[2, 2]		[2, 3]	[2]


	Time: O(2^target)
		- Binary tree makes 2 decisions
		- Height of tree will be 'target' because worst case is if we add up all 1s

	Space: O(2^target)
